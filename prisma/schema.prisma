// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") 
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  refresh_token_expires_in Int? 
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId], name: "provider_providerAccountId")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String   @unique
  emailVerified DateTime?
  image         String?
  hashedPassword  String?
  accounts      Account[]
  sessions      Session[]
  recipes        Recipe[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Recipe {
  id           String   @id @default(cuid())
  user         User     @relation(fields: [userID], references: [id])
  userID       String
  title        String
  createdAt    DateTime @default(now())
  lastEdited   DateTime?
  tags         String[]
  description  String
  ingredients  String[]
  instructions String[]
  url          String?
  picture        Picture?
}

model Picture {
  id          String @default(cuid()) @id
  recipe      Recipe @relation(fields: [recipeId], references: [id])
  recipeId    String @unique
  publicId    String
  url         String 
}
